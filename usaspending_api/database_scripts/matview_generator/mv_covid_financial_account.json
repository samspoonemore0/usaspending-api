{
  "final_name": "mv_covid_financial_account",
  "refresh": true,
  "matview_sql": [
    "SELECT",
    "  awards.id AS award_id,",
    "  awards.type,",
    "  financial_account_records.def_codes,",
    "",
    "  financial_account_records.outlay,",
    "  financial_account_records.obligation,",
    "  COALESCE(awards.total_loan_value, 0) AS total_loan_value,",
    "",
    "  COALESCE(recipient_lookup.recipient_hash, MD5(UPPER(",
    "    CASE",
    "      WHEN COALESCE(FPDS.awardee_or_recipient_uniqu, FABS.awardee_or_recipient_uniqu) IS NOT NULL",
    "        THEN CONCAT('duns-', COALESCE(FPDS.awardee_or_recipient_uniqu, FABS.awardee_or_recipient_uniqu))",
    "      WHEN COALESCE(FPDS.awardee_or_recipient_uei, FABS.uei) IS NOT NULL",
    "        THEN CONCAT('uei-', COALESCE(FPDS.awardee_or_recipient_uei, FABS.uei))",
    "      ELSE CONCAT('name-', COALESCE(FPDS.awardee_or_recipient_legal, FABS.awardee_or_recipient_legal))",
    "    END",
    "  ))::uuid) AS recipient_hash,",
    "  UPPER(COALESCE(recipient_lookup.legal_business_name, FPDS.awardee_or_recipient_legal, FABS.awardee_or_recipient_legal)) AS recipient_name",
    "FROM (",
    "  SELECT",
    "    FABA.award_id,",
    "    ARRAY_AGG(DISTINCT FABA.disaster_emergency_fund_code ORDER BY FABA.disaster_emergency_fund_code) AS def_codes,",
    "    COALESCE(SUM(",
    "      CASE WHEN SA.is_final_balances_for_fy = TRUE THEN COALESCE(FABA.gross_outlay_amount_by_award_cpe,0) + COALESCE(FABA.ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe,0) + COALESCE(FABA.ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe,0) END",
    "    ), 0) AS outlay,",
    "    COALESCE(SUM(FABA.transaction_obligated_amount), 0) AS obligation",
    "  FROM",
    "    financial_accounts_by_awards AS FABA",
    "  INNER JOIN",
    "    disaster_emergency_fund_code AS DEFC ON (FABA.disaster_emergency_fund_code = DEFC.code and DEFC.group_name = 'covid_19')",
    "  INNER JOIN",
    "    submission_attributes AS SA ON (FABA.submission_id = SA.submission_id AND SA.reporting_period_start >= '2020-04-01')",
    "  INNER JOIN",
    "    dabs_submission_window_schedule",
    "      ON (SA.submission_window_id = dabs_submission_window_schedule.id",
    "      AND dabs_submission_window_schedule.submission_reveal_date <= NOW())",
    "  WHERE",
    "    FABA.award_id IS NOT NULL",
    "  GROUP BY",
    "    FABA.award_id",
    ") AS financial_account_records",
    "INNER JOIN",
    "  awards ON (financial_account_records.award_id = awards.id)",
    "LEFT OUTER JOIN",
    "  transaction_fpds AS FPDS ON (awards.latest_transaction_id = FPDS.transaction_id)",
    "LEFT OUTER JOIN",
    "  transaction_fabs AS FABS on (awards.latest_transaction_id = FABS.transaction_id)",
    "LEFT OUTER JOIN",
    "  recipient_lookup ON (recipient_lookup.duns = COALESCE(FPDS.awardee_or_recipient_uniqu, FABS.awardee_or_recipient_uniqu)",
    "    AND COALESCE(FPDS.awardee_or_recipient_uniqu, FABS.awardee_or_recipient_uniqu) IS NOT NULL)",
    "WHERE",
    "  financial_account_records.outlay != 0",
    "  OR financial_account_records.obligation != 0",
    "  OR awards.total_loan_value != 0"
  ],
  "indexes": [
    {
      "name": "award_id",
      "unique": true,
      "columns": [{"name": "award_id"}]
    }
  ]
}
